module.exports = {
  'unicorn/filename-case': [
    'warn',
    {
      cases: {
        camelCase: true,
        pascalCase: true,
        kebabCase: true
      },
      ignore: [/flow-typed/i]
    }
  ],
  'unicorn/prevent-abbreviations': [
    'error',
    {
      whitelist: {
        Dir: true,
        ref: true,
        obj: true,
        curr: true,
        Num: true,
        num: true,
        dir: true,
        param: true,
        e: true,
        len: true,
        prev: true,
        el: true,
        evt: true,
        Props: true,
        params: true,
        dbItems: true,
        req: true,
        res: true,
        proxyRes: true,
        proxyReq: true,
        err: true,
        props: true
      }
    }
  ],
  'unicorn/no-null': ['off'] // good rule, but not practical for DevExtreme

  // 'unicorn/better-regex': 'error',
  // 'unicorn/catch-error-name': 'error',
  // 'unicorn/consistent-function-scoping': 'error',
  // 'unicorn/custom-error-definition': 'off',
  // 'unicorn/error-message': 'error',
  // 'unicorn/escape-case': 'error',
  // 'unicorn/expiring-todo-comments': 'error',
  // 'unicorn/explicit-length-check': 'error',
  // 'unicorn/import-index': 'error',
  // 'unicorn/new-for-builtins': 'error',
  // 'unicorn/no-abusive-eslint-disable': 'error',
  // 'unicorn/no-array-instanceof': 'error',
  // 'unicorn/no-console-spaces': 'error',
  // 'unicorn/no-fn-reference-in-iterator': 'error',
  // 'unicorn/no-for-loop': 'error',
  // 'unicorn/no-hex-escape': 'error',
  // 'unicorn/no-keyword-prefix': 'off',
  // 'no-nested-ternary': 'off',
  // 'unicorn/no-nested-ternary': 'error',
  // 'unicorn/no-new-buffer': 'error',
  // 'unicorn/no-process-exit': 'error',
  // 'unicorn/no-reduce': 'error',
  // 'unicorn/no-unreadable-array-destructuring': 'error',
  // 'unicorn/no-unsafe-regex': 'off',
  // 'unicorn/no-unused-properties': 'off',
  // 'unicorn/no-useless-undefined': 'error',
  // 'unicorn/no-zero-fractions': 'error',
  // 'unicorn/number-literal-case': 'error',
  // 'unicorn/prefer-add-event-listener': 'error',
  // 'unicorn/prefer-dataset': 'error',
  // 'unicorn/prefer-event-key': 'error',
  // 'unicorn/prefer-flat-map': 'error',
  // 'unicorn/prefer-includes': 'error',
  // 'unicorn/prefer-modern-dom-apis': 'error',
  // 'unicorn/prefer-negative-index': 'error',
  // 'unicorn/prefer-node-append': 'error',
  // 'unicorn/prefer-node-remove': 'error',
  // 'unicorn/prefer-number-properties': 'error',
  // 'unicorn/prefer-optional-catch-binding': 'error',
  // 'unicorn/prefer-query-selector': 'error',
  // 'unicorn/prefer-reflect-apply': 'error',
  // 'unicorn/prefer-replace-all': 'off',
  // 'unicorn/prefer-set-has': 'error',
  // 'unicorn/prefer-spread': 'error',
  // 'unicorn/prefer-starts-ends-with': 'error',
  // 'unicorn/prefer-string-slice': 'error',
  // 'unicorn/prefer-text-content': 'error',
  // 'unicorn/prefer-trim-start-end': 'error',
  // 'unicorn/prefer-type-error': 'error',
  // 'unicorn/string-content': 'off',
  // 'unicorn/throw-new-error': 'error'
}
